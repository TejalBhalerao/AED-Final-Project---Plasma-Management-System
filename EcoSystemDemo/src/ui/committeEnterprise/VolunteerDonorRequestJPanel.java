/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.committeEnterprise;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.People.Donor;
import Business.People.DonorRequest;
import HomePages.TableFormat;
import java.awt.Color;
import java.awt.Image;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author patol
 */
public class VolunteerDonorRequestJPanel extends javax.swing.JPanel {

  private  EcoSystem system;
  private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
  //private DonorRequest donorRequest;
  
    VolunteerDonorRequestJPanel(EcoSystem system) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        initComponents();
        this.system = system;
        
        TableRequset.getTableHeader().setDefaultRenderer(new TableFormat());
        populateRequestTable();
     }
   
     
        private void populateRequestTable(){
        DefaultTableModel dtm = (DefaultTableModel) TableRequset.getModel();
        
        dtm.setRowCount(0);
          
        for(DonorRequest dnr : system.getDonorRequestDirectory().getDonorRequestList()){
            System.out.println("PRINITNG IT HERE in Volunteer !!");
            System.out.println(dnr.getName());
        }
        
         for(DonorRequest donorRequest: system.getDonorRequestDirectory().getDonorRequestList()){            
            Object row[] = new Object[4];
            row[0]= donorRequest;
            row[1]= donorRequest.getName();
            row[2]= donorRequest.getContact();
            row[3]= donorRequest.getStatus();
              
            dtm.addRow(row);
        }        
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableRequset = new javax.swing.JTable();
        BtnApprove = new javax.swing.JButton();
        BtnReject = new javax.swing.JButton();
        jLabelID = new javax.swing.JLabel();
        uidText = new javax.swing.JTextField();
        jLabelDOB = new javax.swing.JLabel();
        jLabelAge = new javax.swing.JLabel();
        TextAge = new javax.swing.JTextField();
        jLabelGender = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        TextStreet = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabelStreet = new javax.swing.JLabel();
        jLabelCity = new javax.swing.JLabel();
        TextCity = new javax.swing.JTextField();
        jLabelState = new javax.swing.JLabel();
        TextState = new javax.swing.JTextField();
        jLabelZipcode = new javax.swing.JLabel();
        TextZip = new javax.swing.JTextField();
        jLabelCNo = new javax.swing.JLabel();
        TextContactNo = new javax.swing.JTextField();
        jLabelEmailID = new javax.swing.JLabel();
        TextFieldStatus = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        lastDaySymptomsText = new javax.swing.JTextField();
        jLabelLab = new javax.swing.JLabel();
        jLabelSymptoms = new javax.swing.JLabel();
        jLabel14Days = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        jLabelFollowup = new javax.swing.JLabel();
        TextName = new javax.swing.JTextField();
        BtnDetails = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabelDonorRequest = new javax.swing.JLabel();
        TextLab = new javax.swing.JTextField();
        TextfollowUpTest = new javax.swing.JTextField();
        TextSymptoms = new javax.swing.JTextField();
        lblProfilePicture = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        jLabelBloodGroup = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelcovid = new javax.swing.JLabel();
        jLabelPersonal = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        datechooserDOB = new com.toedter.calendar.JDateChooser();
        jComboBoxGender = new javax.swing.JComboBox<>();
        jComboBoxBloodGroup = new javax.swing.JComboBox<>();
        datechooserPdateV = new com.toedter.calendar.JDateChooser();
        datechooserddateV1 = new com.toedter.calendar.JDateChooser();
        datechooserRdateV = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TableRequset.setBackground(new java.awt.Color(0, 0, 0));
        TableRequset.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TableRequset.setForeground(new java.awt.Color(255, 255, 255));
        TableRequset.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Donor Name", "Contact Number", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableRequset.setFocusable(false);
        TableRequset.setGridColor(new java.awt.Color(0, 0, 0));
        TableRequset.setIntercellSpacing(new java.awt.Dimension(0, 0));
        TableRequset.setRowHeight(30);
        TableRequset.setShowVerticalLines(false);
        jScrollPane1.setViewportView(TableRequset);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 90, 780, 190));

        BtnApprove.setBackground(new java.awt.Color(31, 31, 31));
        BtnApprove.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        BtnApprove.setForeground(new java.awt.Color(255, 255, 255));
        BtnApprove.setText("Approve");
        BtnApprove.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnApprove.setEnabled(false);
        BtnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnApproveActionPerformed(evt);
            }
        });
        add(BtnApprove, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 130, 100, 40));

        BtnReject.setBackground(new java.awt.Color(31, 31, 31));
        BtnReject.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        BtnReject.setForeground(new java.awt.Color(255, 255, 255));
        BtnReject.setText("Reject");
        BtnReject.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnReject.setEnabled(false);
        BtnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRejectActionPerformed(evt);
            }
        });
        add(BtnReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 200, 100, 40));

        jLabelID.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelID.setForeground(new java.awt.Color(255, 255, 255));
        jLabelID.setText("ID");
        add(jLabelID, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, -1, 30));

        uidText.setBackground(new java.awt.Color(0, 0, 0));
        uidText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        uidText.setForeground(new java.awt.Color(255, 255, 255));
        add(uidText, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 380, 170, -1));

        jLabelDOB.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelDOB.setForeground(new java.awt.Color(255, 255, 255));
        jLabelDOB.setText("Date Of Birth");
        add(jLabelDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 430, -1, 30));

        jLabelAge.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelAge.setForeground(new java.awt.Color(255, 255, 255));
        jLabelAge.setText("Age");
        add(jLabelAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 410, -1, -1));

        TextAge.setBackground(new java.awt.Color(0, 0, 0));
        TextAge.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TextAge.setForeground(new java.awt.Color(255, 255, 255));
        add(TextAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 410, 180, -1));

        jLabelGender.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelGender.setForeground(new java.awt.Color(255, 255, 255));
        jLabelGender.setText("Gender");
        add(jLabelGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 530, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Status");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 530, -1, 30));

        TextStreet.setBackground(new java.awt.Color(0, 0, 0));
        TextStreet.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TextStreet.setForeground(new java.awt.Color(255, 255, 255));
        add(TextStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 400, 176, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Covid Diagnosed Date");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 660, -1, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Covid Recovery Date");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 700, -1, -1));

        jLabelStreet.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelStreet.setForeground(new java.awt.Color(255, 255, 255));
        jLabelStreet.setText("Street Address");
        add(jLabelStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 400, -1, -1));

        jLabelCity.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelCity.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCity.setText("City");
        add(jLabelCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 440, -1, 30));

        TextCity.setBackground(new java.awt.Color(0, 0, 0));
        TextCity.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TextCity.setForeground(new java.awt.Color(255, 255, 255));
        add(TextCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 440, 180, -1));

        jLabelState.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelState.setForeground(new java.awt.Color(255, 255, 255));
        jLabelState.setText("State");
        add(jLabelState, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 490, -1, -1));

        TextState.setBackground(new java.awt.Color(0, 0, 0));
        TextState.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TextState.setForeground(new java.awt.Color(255, 255, 255));
        add(TextState, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 480, 180, -1));

        jLabelZipcode.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelZipcode.setForeground(new java.awt.Color(255, 255, 255));
        jLabelZipcode.setText("ZipCode");
        add(jLabelZipcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 530, -1, -1));

        TextZip.setBackground(new java.awt.Color(0, 0, 0));
        TextZip.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TextZip.setForeground(new java.awt.Color(255, 255, 255));
        add(TextZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 530, 180, -1));

        jLabelCNo.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelCNo.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCNo.setText("Contact Number");
        add(jLabelCNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 480, -1, -1));

        TextContactNo.setBackground(new java.awt.Color(0, 0, 0));
        TextContactNo.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TextContactNo.setForeground(new java.awt.Color(255, 255, 255));
        add(TextContactNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, 170, -1));

        jLabelEmailID.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelEmailID.setForeground(new java.awt.Color(255, 255, 255));
        jLabelEmailID.setText("Email ID");
        add(jLabelEmailID, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 450, -1, -1));

        TextFieldStatus.setBackground(new java.awt.Color(0, 0, 0));
        TextFieldStatus.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TextFieldStatus.setForeground(new java.awt.Color(255, 255, 255));
        TextFieldStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldStatusActionPerformed(evt);
            }
        });
        add(TextFieldStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 530, 180, -1));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Last Plasma Donation Date ");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 750, -1, -1));

        lastDaySymptomsText.setBackground(new java.awt.Color(0, 0, 0));
        lastDaySymptomsText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        lastDaySymptomsText.setForeground(new java.awt.Color(255, 255, 255));
        lastDaySymptomsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastDaySymptomsTextActionPerformed(evt);
            }
        });
        add(lastDaySymptomsText, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 800, 170, -1));

        jLabelLab.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelLab.setForeground(new java.awt.Color(255, 255, 255));
        jLabelLab.setText("Was your COVID-19 diagnosis confirmed by a authorised lab centre?");
        add(jLabelLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 670, -1, -1));

        jLabelSymptoms.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelSymptoms.setForeground(new java.awt.Color(255, 255, 255));
        jLabelSymptoms.setText("Currently, do you have any COVID-19 symptoms? ");
        add(jLabelSymptoms, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 710, -1, -1));

        jLabel14Days.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel14Days.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14Days.setText("Has it been at least 14 days since the last day of your symptoms?");
        add(jLabel14Days, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 810, -1, -1));

        jLabelName.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelName.setForeground(new java.awt.Color(255, 255, 255));
        jLabelName.setText("Name");
        add(jLabelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 370, -1, -1));

        jLabelFollowup.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelFollowup.setForeground(new java.awt.Color(255, 255, 255));
        jLabelFollowup.setText("Do you have a follow up test that was negative for COVID-19?");
        add(jLabelFollowup, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 760, -1, -1));

        TextName.setBackground(new java.awt.Color(0, 0, 0));
        TextName.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TextName.setForeground(new java.awt.Color(255, 255, 255));
        add(TextName, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 370, 180, -1));

        BtnDetails.setBackground(new java.awt.Color(31, 31, 31));
        BtnDetails.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        BtnDetails.setForeground(new java.awt.Color(255, 255, 255));
        BtnDetails.setText("View Details");
        BtnDetails.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDetailsActionPerformed(evt);
            }
        });
        add(BtnDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, 130, 40));

        jPanel3.setBackground(new java.awt.Color(31, 31, 31));
        jPanel3.setPreferredSize(new java.awt.Dimension(926, 70));

        jLabelDonorRequest.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelDonorRequest.setForeground(new java.awt.Color(255, 255, 255));
        jLabelDonorRequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDonorRequest.setText("Handling Donor Request ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDonorRequest, javax.swing.GroupLayout.DEFAULT_SIZE, 1706, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDonorRequest, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1730, -1));

        TextLab.setBackground(new java.awt.Color(0, 0, 0));
        TextLab.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TextLab.setForeground(new java.awt.Color(255, 255, 255));
        add(TextLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 660, 170, -1));

        TextfollowUpTest.setBackground(new java.awt.Color(0, 0, 0));
        TextfollowUpTest.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TextfollowUpTest.setForeground(new java.awt.Color(255, 255, 255));
        TextfollowUpTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextfollowUpTestActionPerformed(evt);
            }
        });
        add(TextfollowUpTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 700, 170, -1));

        TextSymptoms.setBackground(new java.awt.Color(0, 0, 0));
        TextSymptoms.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        TextSymptoms.setForeground(new java.awt.Color(255, 255, 255));
        TextSymptoms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextSymptomsActionPerformed(evt);
            }
        });
        add(TextSymptoms, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 750, 170, -1));

        lblProfilePicture.setBackground(new java.awt.Color(0, 0, 0));
        add(lblProfilePicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 130, 130, 130));

        emailText.setBackground(new java.awt.Color(0, 0, 0));
        emailText.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        emailText.setForeground(new java.awt.Color(255, 255, 255));
        add(emailText, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 450, 180, -1));

        jLabelBloodGroup.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelBloodGroup.setForeground(new java.awt.Color(255, 255, 255));
        jLabelBloodGroup.setText("Blood group");
        add(jLabelBloodGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 490, -1, 20));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 1310, 20));

        jLabelcovid.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelcovid.setForeground(new java.awt.Color(255, 255, 255));
        jLabelcovid.setText("Details about COVID");
        add(jLabelcovid, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 610, -1, -1));

        jLabelPersonal.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabelPersonal.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPersonal.setText("Personal Details");
        add(jLabelPersonal, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 320, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 330, -1, -1));

        datechooserDOB.setBackground(new java.awt.Color(0, 0, 0));
        datechooserDOB.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        datechooserDOB.setForeground(new java.awt.Color(255, 255, 255));
        add(datechooserDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 430, 180, 30));

        jComboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGenderActionPerformed(evt);
            }
        });
        add(jComboBoxGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 540, 180, 20));

        jComboBoxBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxBloodGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBloodGroupActionPerformed(evt);
            }
        });
        add(jComboBoxBloodGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 500, 180, 20));

        datechooserPdateV.setBackground(new java.awt.Color(0, 0, 0));
        datechooserPdateV.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        datechooserPdateV.setForeground(new java.awt.Color(255, 255, 255));
        add(datechooserPdateV, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 750, 180, 30));

        datechooserddateV1.setBackground(new java.awt.Color(0, 0, 0));
        datechooserddateV1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        datechooserddateV1.setForeground(new java.awt.Color(255, 255, 255));
        add(datechooserddateV1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 660, 180, 30));

        datechooserRdateV.setBackground(new java.awt.Color(0, 0, 0));
        datechooserRdateV.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        datechooserRdateV.setForeground(new java.awt.Color(255, 255, 255));
        add(datechooserRdateV, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 700, 180, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void BtnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnApproveActionPerformed
        // TODO add your handling code here:
        if( !TextFieldStatus.getText().equals("New Request"))
        {
            //JOptionPane.showMessageDialog(null,"Can Not Approve the Request!");
         JOptionPane.showMessageDialog(null, new JLabel(  "<html><h2><I>Request<font color='red'> can not</font> be approved!</I></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
           
        
        }
        
        else
        {
        Donor donor = system.getDonorDirectory().addDonor();  
        donor.setDonorID(uidText.getText()); // UID
        donor.setName(TextName.getText()); // Name
        donor.setDob(dobDateField.getDate()); // DOB 
        donor.setCovidDiagnosedDate(diagnosedDateField.getDate()); // CovidDiagnosedDate
        donor.setCovidCuredDate(curedDateField.getDate()); // CovidCuredDate
        donor.setLastDonationDate(lastDonationDateField.getDate()); // LastDonationDate
               
        donor.setAge(Integer.parseInt(TextAge.getText())); // Age
        donor.setGender(genderText.getText()); // gender
        donor.setBloodGroup(bloodText.getText()); // Blood group
        donor.setStreetAddress(TextStreet.getText()); // streetAddress
        donor.setCity(TextCity.getText()); // city
        donor.setState(TextState.getText()); // state
        donor.setZipCode(Integer.parseInt(TextZip.getText())); // zipCode
        donor.setContact(Integer.parseInt(TextContactNo.getText())); // contact
        donor.setEmailID(TextFieldStatus.getText()); // emailID
        donor.setStatus("Government Approved"); // status
    
        donor.setLabConfirmation(true); //  labConfirmation
        donor.setSymptoms(true); //  symptoms
        donor.setLastDaySymptoms(true); //  lastDaySymptoms
        donor.setFollowUpTest(true); //  followUpTest     
             
        for(DonorRequest donorRequest: system.getDonorRequestDirectory().getDonorRequestList()){            
        
            if(donorRequest.getDonorID().equals(uidText.getText())){
            donorRequest.setStatus("Government Approved");
            dB4OUtil.storeSystem(system);
            }
        }
        TextFieldStatus.setText("Government Approved");
        
        dB4OUtil.storeSystem(system);
        populateRequestTable();
         JOptionPane.showMessageDialog(null, new JLabel(  "<html><h2><I>Request<font color='green'> approved</font> successfully!</I></h2></html>"));
           
        //JOptionPane.showMessageDialog(null,"Request Approved. New Donor added!");
        
        
        
        }
    }//GEN-LAST:event_BtnApproveActionPerformed

    private void BtnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDetailsActionPerformed
        // TODO add your handling code here:
  
        int selectedRow = TableRequset.getSelectedRow();
        if(selectedRow < 0){
             JOptionPane.showMessageDialog(null, new JLabel(  "<html><h2><I>Please select<font color='red'> a row</font> from the<font color='green'> table</font> to view details!</I></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
           
           // JOptionPane.showMessageDialog(null,"Please select a row from the table first to View Details!","Warning!",JOptionPane.WARNING_MESSAGE);
        }
        else{
       //display the details 
            populateRequestDetails((DonorRequest) TableRequset.getValueAt(selectedRow, 0));
            BtnApprove.setEnabled(true);
            BtnReject.setEnabled(true);
            
            if(Integer.parseInt(TextAge.getText()) < 18) // AGE IS LESS THAN 18 YEARS
            {
            TextAge.setBorder(BorderFactory.createLineBorder(Color.RED));
            TextAge.setForeground(Color.red);
            }
            if(TextLab.getText().equals("false")) // Was your COVID-19 diagnosis confirmed by a lab test?
            {
            TextLab.setBorder(BorderFactory.createLineBorder(Color.RED));
            TextLab.setForeground(Color.red);
            }
            if(TextfollowUpTest.getText().equals("false")) // Have you had a follow up test that was negative for COVID-19?
            {
            TextfollowUpTest.setBorder(BorderFactory.createLineBorder(Color.RED));
            TextfollowUpTest.setForeground(Color.red);
            }
            if(TextSymptoms.getText().equals("false")) // Currently you do NOT have any symptoms? 
            {
            TextSymptoms.setBorder(BorderFactory.createLineBorder(Color.RED));
            TextSymptoms.setForeground(Color.red);
            }
            if(lastDaySymptomsText.getText().equals("false")) // Has it been at least 14 days since the last day of your symptoms?
            {
            lastDaySymptomsText.setBorder(BorderFactory.createLineBorder(Color.RED));
            lastDaySymptomsText.setForeground(Color.red);
            }
            if(new Date().getDay() - lastDonationDateField.getDate().getDay()  < 30) // AGE IS LESS THAN 18 YEARS
            {
            lastDonationDateField.setBorder(BorderFactory.createLineBorder(Color.RED));
            lastDonationDateField.setForeground(Color.red);
            }

            
           dB4OUtil.storeSystem(system);
            
        }
    }

    private void populateRequestDetails(DonorRequest donorRequest){
            uidText.setText(donorRequest.getDonorID());
            TextName.setText(donorRequest.getName());
            dobDateField.setDate(donorRequest.getDob());
            curedDateField.setDate(donorRequest.getCovidCuredDate());
            diagnosedDateField.setDate(donorRequest.getCovidDiagnosedDate());
            lastDonationDateField.setDate(donorRequest.getLastDonationDate());
            TextAge.setText(String.valueOf(donorRequest.getAge()));
            genderText.setText(donorRequest.getGender());
            bloodText.setText(donorRequest.getBloodGroup());
            TextStreet.setText(donorRequest.getStreetAddress());
            TextCity.setText(donorRequest.getCity());
            TextState.setText(donorRequest.getState());
            TextZip.setText(String.valueOf(donorRequest.getZipCode()));
            TextContactNo.setText(String.valueOf(donorRequest.getContact()));
            emailText.setText(donorRequest.getEmailID());
            TextFieldStatus.setText(donorRequest.getStatus());
      
            TextLab.setText(String.valueOf(donorRequest.isLabConfirmation()));
            TextfollowUpTest.setText(String.valueOf(donorRequest.isFollowUpTest()));
            TextSymptoms.setText(String.valueOf(donorRequest.isSymptoms()));
            lastDaySymptomsText.setText(String.valueOf(donorRequest.isLastDaySymptoms()));
            
            if(donorRequest.getdP() !=null){
            //Working line
            byte[] JLabelpictureLabel = donorRequest.getdP();
            ImageIcon i = setPicturebyte(JLabelpictureLabel);
            lblProfilePicture.setIcon(i);
            }
            else{
            System.err.println("No Image");
            }
            
            uidText.setEditable(false);
            TextName.setEditable(false);
            TextAge.setEditable(false);
            genderText.setEditable(false);
            bloodText.setEditable(false);
            TextStreet.setEditable(false);
            TextCity.setEditable(false);
            TextState.setEditable(false);
            TextZip.setEditable(false);
            TextContactNo.setEditable(false);
            TextFieldStatus.setEditable(false);
            TextFieldStatus.setEditable(false);
            TextLab.setEditable(false);
            TextfollowUpTest.setEditable(false);
            TextSymptoms.setEditable(false);
            lastDaySymptomsText.setEditable(false);        
            diagnosedDateField.setEnabled(false);
            dobDateField.setEnabled(false);
            curedDateField.setEnabled(false);
            lastDonationDateField.setEnabled(false);
            
    }//GEN-LAST:event_BtnDetailsActionPerformed

    private ImageIcon setPicturebyte(byte[] byteArrayImage){

        ImageIcon imageCar;
        imageCar = new ImageIcon(byteArrayImage);
        Image picCar = imageCar.getImage();
        JLabel pictureLabel1 = new JLabel();
        pictureLabel1.setSize(107, 133);
        Image resizedImage = picCar.getScaledInstance(pictureLabel1.getWidth(), pictureLabel1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon selectedCarPicture = new ImageIcon(resizedImage);
        return selectedCarPicture;  
}
    
    
    
    private void BtnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRejectActionPerformed
        // TODO add your handling code here:
       if(!TextFieldStatus.getText().equals("New Request"))
                  {
                      
       JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Request<font color='red'> can not</font> be rejected!</I></h2></html>"), "Warning", JOptionPane.WARNING_MESSAGE);
          
                      
                      //JOptionPane.showMessageDialog(null,"Can Not Reject the Request!");
        }
       else{
        for(DonorRequest donorRequest: system.getDonorRequestDirectory().getDonorRequestList()){            
        
            if(donorRequest.getName().equals(TextName.getText())){
            TextFieldStatus.setText("Rejected");
            donorRequest.setStatus("Rejected");
            }}
        dB4OUtil.storeSystem(system);
        populateRequestTable();
        
        JOptionPane.showMessageDialog(null, new JLabel("<html><h2><I>Request has been<font color='red'> rejected</font>!</I></h2></html>"));
        
        //JOptionPane.showMessageDialog(null,"Rejected the Request!");
        }
       dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_BtnRejectActionPerformed

    private void lastDaySymptomsTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastDaySymptomsTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastDaySymptomsTextActionPerformed

    private void TextfollowUpTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextfollowUpTestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextfollowUpTestActionPerformed

    private void TextSymptomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextSymptomsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextSymptomsActionPerformed

    private void dobDateFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dobDateFieldFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_dobDateFieldFocusLost

    private void dobDateFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dobDateFieldMouseExited
        //Date dob = dobDateField.getDate();
        //System.out.println(dob.getYear());
        //ageText.setText((String.valueOf(new Date().getYear()-dob.getYear())));
    }//GEN-LAST:event_dobDateFieldMouseExited

    private void dobDateFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dobDateFieldMousePressed

    }//GEN-LAST:event_dobDateFieldMousePressed

    private void dobDateFielduDobKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dobDateFielduDobKeyTyped
        // TODO add your handling code here:
        System.out.println("date");
        /*

        Date dob = dobDateField.getDate();

        LocalDate today = LocalDate.now();                          //Today's date
        LocalDate birthday;  //Birth date
        birthday = LocalDate.of(dob);

        Period p = Period.between(birthday, today);

        ageText.setText(String.valueOf(p.getYears()));
        String dobq=  calculateAge(dob, today);

        }

        */
        /*  public  int calculateAge(LocalDate birthDate, LocalDate currentDate) {
            if ((birthDate != null) && (currentDate != null)) {
                return Period.between(birthDate, currentDate).getYears();
            } else {
                return 0;
            }

            */
    }//GEN-LAST:event_dobDateFielduDobKeyTyped

    private void curedDateFieldUCovidCuredDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_curedDateFieldUCovidCuredDateKeyTyped
        // TODO add your handling code here:
        //if( diagnosedDateField.getDate().compareTo(curedDateField.getDate()) > 0){
            // Date 1 is after Date 2
          //  curedDateValidateMessage.setVisible(true);
        //}

    }//GEN-LAST:event_curedDateFieldUCovidCuredDateKeyTyped

    private void TextFieldStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldStatusActionPerformed

    private void jComboBoxGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGenderActionPerformed
        // TODO add your handling code here:
        populateBloodGroupComboBox();
        populateGenderComboBox();
        populateStateComboBox();

        }

        private void populateBloodGroupComboBox(){

            jComboBoxGender.addItem("O+");
            jComboBoxGender.addItem("AB+");
            jComboBoxGender.addItem("O-");
            jComboBoxGender.addItem("AB-");
            jComboBoxGender.addItem("A+");
            jComboBoxGender.addItem("B+");
            jComboBoxGender.addItem("A-");
            jComboBoxGender.addItem("B-");

    }//GEN-LAST:event_jComboBoxGenderActionPerformed

    private void jComboBoxBloodGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBloodGroupActionPerformed
        // TODO add your handling code here:
        populateBloodGroupComboBox();
        populateGenderComboBox();
        populateStateComboBox();

        }

        private void populateBloodGroupComboBox(){

            jComboBoxBloodGroup.addItem("O+");
            jComboBoxBloodGroup.addItem("AB+");
            jComboBoxBloodGroup.addItem("O-");
            jComboBoxBloodGroup.addItem("AB-");
            jComboBoxBloodGroup.addItem("A+");
            jComboBoxBloodGroup.addItem("B+");
            jComboBoxBloodGroup.addItem("A-");
            jComboBoxBloodGroup.addItem("B-");

    }//GEN-LAST:event_jComboBoxBloodGroupActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnApprove;
    private javax.swing.JButton BtnDetails;
    private javax.swing.JButton BtnReject;
    private javax.swing.JTable TableRequset;
    private javax.swing.JTextField TextAge;
    private javax.swing.JTextField TextCity;
    private javax.swing.JTextField TextContactNo;
    private javax.swing.JTextField TextFieldStatus;
    private javax.swing.JTextField TextLab;
    private javax.swing.JTextField TextName;
    private javax.swing.JTextField TextState;
    private javax.swing.JTextField TextStreet;
    private javax.swing.JTextField TextSymptoms;
    private javax.swing.JTextField TextZip;
    private javax.swing.JTextField TextfollowUpTest;
    private com.toedter.calendar.JDateChooser datechooserDOB;
    private com.toedter.calendar.JDateChooser datechooserPdateV;
    private com.toedter.calendar.JDateChooser datechooserRdateV;
    private com.toedter.calendar.JDateChooser datechooserddateV1;
    private javax.swing.JTextField emailText;
    private javax.swing.JComboBox<String> jComboBoxBloodGroup;
    private javax.swing.JComboBox<String> jComboBoxGender;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14Days;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelAge;
    private javax.swing.JLabel jLabelBloodGroup;
    private javax.swing.JLabel jLabelCNo;
    private javax.swing.JLabel jLabelCity;
    private javax.swing.JLabel jLabelDOB;
    private javax.swing.JLabel jLabelDonorRequest;
    private javax.swing.JLabel jLabelEmailID;
    private javax.swing.JLabel jLabelFollowup;
    private javax.swing.JLabel jLabelGender;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelLab;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPersonal;
    private javax.swing.JLabel jLabelState;
    private javax.swing.JLabel jLabelStreet;
    private javax.swing.JLabel jLabelSymptoms;
    private javax.swing.JLabel jLabelZipcode;
    private javax.swing.JLabel jLabelcovid;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField lastDaySymptomsText;
    private javax.swing.JLabel lblProfilePicture;
    private javax.swing.JTextField uidText;
    // End of variables declaration//GEN-END:variables
}
